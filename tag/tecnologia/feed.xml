<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://eltallerdelhuerto.com/tag/tecnologia/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://eltallerdelhuerto.com/" rel="alternate" type="text/html" />
  <updated>2022-02-12T18:35:25+01:00</updated>
  <id>https://eltallerdelhuerto.com/tag/tecnologia/feed.xml</id>

  
  
  

  
    <title type="html">El taller del huerto | </title>
  

  
    <subtitle>Si eres curios@, aprende de forma práctica cómo aplicar la tecnología en el cuidado de tus plantas</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Notas: MOFSETs como switch</title>
      <link href="https://eltallerdelhuerto.com/mofset-switch" rel="alternate" type="text/html" title="Notas: MOFSETs como switch" />
      <published>2022-02-12T11:00:00+01:00</published>
      <updated>2022-02-12T11:00:00+01:00</updated>
      <id>https://eltallerdelhuerto.com/mofset-switch</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/mofset-switch">&lt;p&gt;En este post persigo guardar las notas que me serán útiles para entender el diseño que he llevado a cabo de un circuito switch con MOFSETs.&lt;/p&gt;

&lt;h2 id=&quot;notas-para-la-creación-de-un-controlador-de-electroválvula&quot;&gt;Notas para la creación de un controlador de electroválvula&lt;/h2&gt;
&lt;p&gt;Este controlador va a alimentarse con una batería de 12V. Yo voy a usar la que acabo de cambiar de mi moto, ya que para este tipo de trabajos vale perfectamente.&lt;/p&gt;

&lt;p&gt;Además, tengo una electroválvula de 12V que es la que voy a abrir y cerrar con el controlador. Para ello, voy a usar un circuito basado en MOFSET canal N que trabaja a nivel lógico: IRLZ44N y cualquier MOFSET de canal P, en este caso voy a usar los IRF5210 que los tengo a mano.&lt;/p&gt;

&lt;p&gt;La idea es usar el canal N como switch del de canal P, de forma que los 3.3V de Arduino abrirán el circuito que hará que el voltaje en el MOFSET de canal P sea 0V en el Gate, por lo que se mantendrán abiertos (normalmente abiertos).&lt;/p&gt;

&lt;p&gt;Sin embargo, cuando el MOFSET de canal N se cierre, con la resistencia pull-up del canal P, tendremos el MOFSET cerrado, es decir, con un voltaje de unos 12V en su Gate.&lt;/p&gt;

&lt;h2 id=&quot;resistencia-pull-down&quot;&gt;Resistencia pull-down&lt;/h2&gt;

&lt;p&gt;Considero que el LOW máximo es 0.3v
Vin=3.3V
VR5=3.3V - 0.3V = 3V
Intensidad max Arduino = 20mA, pero limito a 10nA por seguridad
Dada la ley de Ohm, V=I&lt;em&gt;R, R5=3/10&lt;/em&gt;10^-6 = 30000Ω = 30kΩ. Voy a usar una de 10k que es más común y tendremos el mismo orden de intensidad en nano-amperios.&lt;/p&gt;

&lt;h2 id=&quot;resistencia-para-proteger-arduino&quot;&gt;Resistencia para proteger Arduino&lt;/h2&gt;
&lt;p&gt;Aplico la misma lógica para R3, dado que no quiero que la corriente de carga inicial del MOFSET supere 10mA. Para ello voy a usar una resistencia de 270Ω.&lt;/p&gt;

&lt;h2 id=&quot;resistencia-pull-up&quot;&gt;Resistencia pull-up&lt;/h2&gt;
&lt;p&gt;Cuando el IRLZ44N está ON, R4 está directamente conectada a GND, es como un circuito cerrado.&lt;/p&gt;

&lt;p&gt;Vamos a poner una intensidad mucho más baja para evitar una gran caída de voltaje con resistencias del orden de cientos de amperios. Por ejemplo 10nA&lt;/p&gt;

&lt;p&gt;Como las resistencias en los Gate de los MOFSET son casi infinitas, el circuito actúa como si estuviera cerrado, luego no hay corriente entre R4 y el Gate.&lt;/p&gt;

&lt;p&gt;Considero que el HIGH mínimo es 11.9
Vin=12V
VR5=12V - 11.9V = 0.1V
Dada la ley de Ohm, V=I&lt;em&gt;R, R4=0.1/10&lt;/em&gt;10^-6 = 10000Ω = 10kΩ&lt;/p&gt;

&lt;h2 id=&quot;diseño&quot;&gt;Diseño&lt;/h2&gt;
&lt;p&gt;En el diseño he usado como ejemplo un Arduino de 5V y un MOFSET IRFZ44N, pero aplica igual para el que he usado realmente, solo que cambiamos el voltaje por el de un Arduino de 3.3V.&lt;/p&gt;

&lt;p&gt;La fuente de alimentación de 5V representa la salida digital de Arduino.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2022-02-12-mofset-switch/design.png&amp;quot; Diseño con CircuitLab del circuito&amp;quot;&quot; alt=&quot;Diseño con CicuitLab del circuito&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">En este post persigo guardar las notas que me serán útiles para entender el diseño que he llevado a cabo de un circuito switch con MOFSETs.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">KiCAD</title>
      <link href="https://eltallerdelhuerto.com/kicad-tutorial-como-empezar" rel="alternate" type="text/html" title="KiCAD" />
      <published>2021-05-01T12:00:00+02:00</published>
      <updated>2021-05-01T12:00:00+02:00</updated>
      <id>https://eltallerdelhuerto.com/kicad-tutorial-como-empezar</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/kicad-tutorial-como-empezar">&lt;p&gt;KiCAD, que se pronuncia “Key CAD) es una herramienta open source que te permite diseñar circuitos. Me la ha recomendado un compañero del trabajo y voy a probarla.&lt;/p&gt;

&lt;p&gt;Yo lo que voy a hacer es diseñar una PCB para un Arduino Nano, de forma que luego pueda soldarla.&lt;/p&gt;

&lt;p&gt;Normalmente he usado las típicas PCB que ya vienen perforadas y simplemente pues usas los agujeros que quieres, como por ejemplo estas &lt;img src=&quot;assets/images/2021-05-01-kicad-tutorial-como-empezar/pcb.jpg&quot; alt=&quot;PCB perforadas&quot; title=&quot;PCB perforadas&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lo bueno que tiene el diseñarlo es que luego lo mandaré a imprimir y recibiré exactamente el diseño que he hecho.&lt;/p&gt;

&lt;h2 id=&quot;instalación&quot;&gt;Instalación&lt;/h2&gt;
&lt;p&gt;KiCAD pesa bastante, lo puedes descargar de la su &lt;a href=&quot;https://www.kicad.org/download/&quot;&gt;propia web&lt;/a&gt; y está disponible para todos los SO más usados.&lt;/p&gt;

&lt;p&gt;Yo voy a trabajar con la versión 5.1.9 para OX.&lt;/p&gt;

&lt;h2 id=&quot;creando-el-proyecto&quot;&gt;Creando el proyecto&lt;/h2&gt;
&lt;p&gt;Voy a seguir &lt;a href=&quot;https://forum.kicad.info/t/tutorial-introduction-to-pcb-design-with-kicad-version-5-1-getting-started/20600/2&quot;&gt;este tutorial&lt;/a&gt;, que parece bastante completo.&lt;/p&gt;

&lt;p&gt;Le doy a &lt;code class=&quot;highlighter-rouge&quot;&gt;File &amp;gt; New Project&lt;/code&gt; y lo guardo con un nombre, en este caso &lt;em&gt;weather_station&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Me genera dos ficheros, uno &lt;code class=&quot;highlighter-rouge&quot;&gt;.pcb&lt;/code&gt;y otro &lt;code class=&quot;highlighter-rouge&quot;&gt;. sch&lt;/code&gt;. Supongo que el PCB será para imprimir, ahora lo veré.&lt;/p&gt;

&lt;p&gt;Siguiendo el tutorial, voy a abrir el fichero &lt;code class=&quot;highlighter-rouge&quot;&gt;sch&lt;/code&gt; que contiene el esquema del circuito.&lt;/p&gt;

&lt;h2 id=&quot;crear-el-diseño-de-un-led&quot;&gt;Crear el diseño de un led.&lt;/h2&gt;
&lt;p&gt;Para empezar voy a probar con un led simplemente.&lt;/p&gt;

&lt;p&gt;Le doy a &lt;code class=&quot;highlighter-rouge&quot;&gt;Place Symbol&lt;/code&gt; en el menú de la derecha, y busco &lt;code class=&quot;highlighter-rouge&quot;&gt;led&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ahora selecciono el primero, &lt;code class=&quot;highlighter-rouge&quot;&gt;LED&lt;/code&gt;, sinceramente hay muchos más pero no tengo ni idea, así que vamos con el primero.&lt;/p&gt;

&lt;p&gt;A esto que acabamos de seleccionar lo llaman footprint.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;El footprint es lo que define la interfaz de comunicación con cada elemento, es decir, donde vendrán los zócalos para soldar entre otras cosas.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Cuando ya aparece el footprint del LED en el esquema, el tutorial dice que hay unos círculos en al lado de cada número que me permitirán hacer conexiones y que puedo unir.&lt;/p&gt;

&lt;p&gt;A continuación, justo debajo del botón de &lt;code class=&quot;highlighter-rouge&quot;&gt;Place Symbol&lt;/code&gt;está el botón para añadir alimentación, por lo que voy a añadir una toma de tierra GND y una fuente de 5V. Ahora simplemente los conecto (bien, voy a buscar en Google cómo, porque no sé qué pare es la positiva y la negativa en el símbolo).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;
Repasando que es un LED, el ánodo es la parte positiva (suele ser la pata más larga del LED) y el cátodo es la negativa. Voy a imaginarme un gato (cato) enfadado, y ya está, memorizado para siempre: el gato enfadado es negativo.

Las flechas parece como que indican el sentido de la corriente, por lo que es sencillo conectarlo. La punta de la flecha es el cátodo.
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Voy a conectar, ahora sí, el LED. Para ello voy selecciono el icono de la línea verde de la derecha que dice &lt;code class=&quot;highlighter-rouge&quot;&gt;Place wire&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Voy a parar por ahora!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">KiCAD, que se pronuncia “Key CAD) es una herramienta open source que te permite diseñar circuitos. Me la ha recomendado un compañero del trabajo y voy a probarla.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Programar cuidados en C: cómo empezar</title>
      <link href="https://eltallerdelhuerto.com/programar-arduino-para-plantas" rel="alternate" type="text/html" title="Programar cuidados en C: cómo empezar" />
      <published>2020-06-04T12:00:00+02:00</published>
      <updated>2020-06-04T12:00:00+02:00</updated>
      <id>https://eltallerdelhuerto.com/programar-arduino-para-plantas</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/programar-arduino-para-plantas">&lt;p&gt;C es el lenguaje de programación que usamos en Arduino para programar las tareas de cuidado que necesitan nuestras plantas.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Un lenguaje de programación se trata de un lenguaje pensado para instruir a un ordenador a ejecutar tareas&lt;/strong&gt;, como he comentado. Como cualquier lenguaje tiene una serie de reglas gramaticales y vocabulario.&lt;/p&gt;

&lt;h2 id=&quot;c-va-a-ser-nuestro-nuevo-lenguaje&quot;&gt;C va a ser nuestro nuevo lenguaje&lt;/h2&gt;
&lt;p&gt;Hay ingente documentación sobre este lenguaje, nuestros sistemas operativos se basan en este lenguaje, sistemas a tiempo real e infinidad de aplicaciones que usamos diariamente. En este post no voy a entrar en detalle sobre él, pero si vamos a ver sus aplicaciones a la hora de programar en Arduino.&lt;/p&gt;

&lt;p&gt;Antes de ello, tenemos que familiarizarnos estos conceptos:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Sentencia&lt;/strong&gt;, una sentencia es una frase que contiene una acción. Por ejemplo&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  &lt;span class=&quot;n&quot;&gt;mover&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;los&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pies&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Función&lt;/strong&gt;. Es un conjunto de acciones que vamos a programar y a la que le daremos un nombre. Por ejemplo:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;andar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mover&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;los&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pies&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Programa&lt;/strong&gt;, en Arduino suele llamarse Sketch, para simplificar se trata de un conjunto de funciones que se van a ejecutar.
Por ejemplo&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;andar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mover&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;los&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pies&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;andar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;En el programa anterior tenemos tres funciones, una creada por nosotros: &lt;em&gt;andar&lt;/em&gt; y las otras dos son funciones, y que son las que nuestro Sketch va a usar siempre.&lt;/p&gt;

&lt;h2 id=&quot;setup-y-loop&quot;&gt;Setup y Loop&lt;/h2&gt;
&lt;p&gt;Los programas en Arduino son bucles, es decir, ejecutan lo mismo de forma infinita mientras estén encendidos.&lt;/p&gt;

&lt;p&gt;En cada Sketch vamos a ver dos funciones:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;setup. Esta función se ejecuta antes del bucle y se ejecuta solo una vez cuando encendemos Arduino, como su nombre indica, sirve para configurar parámetros iniciales, como por ejemplo un sensor para poder trabajar con él.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;loop. Como su nombre indica, este es el bucle. Se ejecutará de forma infinita y aquí es donde irá normalmente el código de medición de sensores, etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;a-la-práctica-el-ide&quot;&gt;A la práctica: el IDE&lt;/h2&gt;
&lt;p&gt;Vale, antes de ello voy a explicar que es un IDE. Un IDE son las siglas de Entorno de Desarrollo Integrado (Integrated Development Environment). Y consiste en una aplicación que nos va a permitir escribir nuestro programa.&lt;/p&gt;

&lt;p&gt;Actualmente contamos con dos opciones, la opción Web y la opción nativa, la que descargamos a nuestro ordenador. Para este ejemplo, vamos a comenzar con la opción web. Por lo que iremos al IDE online de Arduino: &lt;a href=&quot;https://create.arduino.cc&quot;&gt;Arduino Create&lt;/a&gt;, nos registramos y seleccionamos&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2020-06-04-programar-arduino-para-plantas/arduino-create.png&quot; alt=&quot;Arduino Create. Web Editor&quot; title=&quot;Arduino Create. Web editor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;¡Y tachan! tenemos nuestro primer Sketch con las funciones que he comentado anteriormente. Vamos a parar por un momento para asimilar todo lo que hemos visto.&lt;/p&gt;

&lt;h2 id=&quot;siguientes-pasos&quot;&gt;Siguientes pasos&lt;/h2&gt;
&lt;p&gt;Hemos visto dónde escribir un Sketch de Arduino y qué significa. Ahora necesitas un Arduino :) ¿Por qué? porque para poder seguir y ver los resultados de forma real es lo más recomendable.&lt;/p&gt;

&lt;p&gt;El primero que compré yo para jugar y experimentar fue &lt;a href=&quot;http://rover.ebay.com/rover/1/1185-53479-19255-0/1?ff3=4&amp;amp;pub=5575581389&amp;amp;toolid=10001&amp;amp;campid=5338673600&amp;amp;customid=&amp;amp;mpre=https%3A%2F%2Fwww.ebay.es%2Fitm%2FUNO-R3-Rev3-ATmega328-16U2-Arduino-100-Compatible-cable-USB-ULTIMA-VERSION-B009%2F201530741428%3Fhash%3Ditem2eec2b12b4%3Ag%3AKKAAAOSwFdtXxD45&quot; target=&quot;_blank&quot;&gt;este similar Arduino UNO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No es el original, pero funciona perfectamente ya que es 100% compatible. &lt;a href=&quot;arduino-para-el-cuidado-de-plantas&quot;&gt;Recordemos que Arduino es hardware open source&lt;/a&gt;, por lo que cualquiera puede crear sus propias placas.&lt;/p&gt;

&lt;p&gt;Más adelante veremos que hay otras placas más pequeñas o más potentes, pero por el momento esta nos va a dar mucho juego.&lt;/p&gt;

&lt;h2 id=&quot;programando-el-parpadeo-de-un-led&quot;&gt;Programando el parpadeo de un LED&lt;/h2&gt;
&lt;p&gt;En este punto vamos a ver lo sencillo que es programar un parpadeo de un LED. Para empezar necesitamos los siguientes componentes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Un LED&lt;/li&gt;
  &lt;li&gt;Una resistencia&lt;/li&gt;
  &lt;li&gt;Un Arduino&lt;/li&gt;
  &lt;li&gt;Una placa de prueba&lt;/li&gt;
  &lt;li&gt;Cables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La resistencia va a ser necesaria porque de lo contrario corremos el riesgo de quemar nuestro led, puesto que la corriente que circula por él puede ser muy grande al no haber resistencia. Añadiendo una resistencia evitamos eso.&lt;/p&gt;

&lt;p&gt;El código lo tenemos como uno de los ejemplos en Arduino Web Editor o Arduino IDE. Vamos a Examples -&amp;gt; Basics -&amp;gt; Blink y nos apaecerá el siguiente código:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;// the setup function runs once when you press reset or power the board
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// initialize digital pin LED_BUILTIN as an output.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BUILTIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// the loop function runs over and over again forever
&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BUILTIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;// turn the LED on (HIGH is the voltage level)
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// wait for a second
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LED_BUILTIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// turn the LED off by making the voltage LOW
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// wait for a second
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Te sugiero que leas los comentarios del código para entender qué sucede.&lt;/p&gt;

&lt;p&gt;En este punto tenemos que subir el código a nuestro Arduino, para que lo ejecute. Le damos a Sketch -&amp;gt; Upload&lt;/p&gt;

&lt;p&gt;Tras subirse deberíamos de ver el parpadeo del led cada segundo.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Esta ha sido una introducción básica donde hemos visto cómo interactuar con elementos externos, en este caso un LED. Esto nos permitirá entender cómo se comunican los sensores con nuestro Arduino en un próximo post.&lt;/p&gt;

&lt;p&gt;Además hemos visto cómo se ejecuta el código en Arduino, desde su programación hasta su posterior subida y ejecución.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">C es el lenguaje de programación que usamos en Arduino para programar las tareas de cuidado que necesitan nuestras plantas.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Cambio de frecuencia de Arduino Nano desde 18Mhz a 8Mhz por software</title>
      <link href="https://eltallerdelhuerto.com/cambio-arduino-nano-8mhz-software" rel="alternate" type="text/html" title="Cambio de frecuencia de Arduino Nano desde 18Mhz a 8Mhz por software" />
      <published>2020-05-04T12:00:00+02:00</published>
      <updated>2020-05-04T12:00:00+02:00</updated>
      <id>https://eltallerdelhuerto.com/cambio-arduino-nano-8mhz-software</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/cambio-arduino-nano-8mhz-software">&lt;p&gt;Vamos a ver cómo modificar la frecuencia de reloj de la CPU de nuestro Arduino a través del software.&lt;/p&gt;

&lt;p&gt;Cuando hablamos de uso de sistemas IoT en el campo, la batería es algo muy importante ya que no siempre vamos a poder cargarla, es por ello que es crucial prestar atención a este punto. Si queremos optimizar nuestra batería para poder usar nuestra estación de control basada en Arduino de forma que no tengamos que preocuparnos, puedes seguir leyendo.&lt;/p&gt;

&lt;h2 id=&quot;problema&quot;&gt;Problema&lt;/h2&gt;
&lt;p&gt;Cuando queremos alimentar nuestro Arduino y tenemos uno que funciona a 5v, hemos de elegir batería y no hay muchas opciones que nos permitan usar una única batería sin step-up para llegar a 5v. Usar una batería tiene la ventaja de que si usamos un cargador solar, el diseño es mucho más simple, más reducido, en general son todo ventajas cuando hablamos del campo.&lt;/p&gt;

&lt;h2 id=&quot;solución&quot;&gt;Solución&lt;/h2&gt;
&lt;p&gt;La solución, o una de las soluciones es usar una batería a 3.7v y disminuir la frecuencia de la CPU de Arduino. Aunque con un Arduino a 5v podemos funcionar en la práctica con una batería de 3.7v, podemos tener problemas al estar un poco al límite de la especificación.&lt;/p&gt;

&lt;p&gt;Arduino monta normalmente un microcontrolador ATMega356 y para hacer el campo podemos de dos maneras, a través de hardware cambiando el oscilador externo por uno con menos frecuenca o bien mediante software como vamos a ver a continuación.&lt;/p&gt;

&lt;p&gt;Para cambiar la frecuencia operativa de nuestro Arduino a través de software hemos de cambiar el factor de división del CLKPR, el registro de escalado del reloj. Inicialmente este registro contendrá el valor 0, lo que nos dará una frecuencia de 16Mhz. Podemos verlo en la siguiente tabla:&lt;/p&gt;

&lt;table&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;Valor CLKPR&lt;/th&gt;
&lt;th&gt;Factor de división&lt;/th&gt;
&lt;th&gt;Frecuencia&lt;/th&gt;
&lt;th&gt;Parámetro de clock_prescale_set()&lt;/th&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;16000000&lt;/td&gt;
&lt;td&gt;clock_div_1&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;8000000&lt;/td&gt;
&lt;td&gt;clock_div_2&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;4000000&lt;/td&gt;
&lt;td&gt;clock_div_4&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;2000000&lt;/td&gt;
&lt;td&gt;clock_div_8&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;1000000&lt;/td&gt;
&lt;td&gt;clock_div_16&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;500000&lt;/td&gt;
&lt;td&gt;clock_div_32&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;250000&lt;/td&gt;
&lt;td&gt;clock_div_64&lt;/td&gt;

&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;128&lt;/td&gt;
&lt;td&gt;125000&lt;/td&gt;
&lt;td&gt;clock_div_128&lt;/td&gt;

&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;256&lt;/td&gt;
&lt;td&gt;62500&lt;/td&gt;
&lt;td&gt;clock_div_256&lt;/td&gt;
&lt;/tr&gt;

&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;actualizar-el-valor-de-la-cpu-a-8mhz&quot;&gt;Actualizar el valor de la CPU a 8Mhz&lt;/h2&gt;
&lt;p&gt;Si tomamos los valores de la tabla anterior para que nuestro Arduino trabaje a 8Mhz, tendremos que el valor del factor de división del CLKPR será 1. Para actualizar este registro hemos de escribir primero todos los valores a 0 menos el primer bit que recibe el nombre de CLKPCE que hemos de escribir a 1, indicando que empezamos la secuencia.&lt;/p&gt;

&lt;p&gt;Vamos a usar el operador de desplazamiento izquierdo de bytes de C &lt;em&gt;«&lt;/em&gt;, que moverá un bit a la izquierda todos los bites que tenemos en el registro. Por ejemplo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00000101&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;five&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00001010&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ten&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;five&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Partiendo de la base de que el registro CLKPR contiene todo 0 inicialmente, lo que hacemos es añadir un 1 a la derecha (recordemos que en binario leemos de derecha a izquierda).&lt;/p&gt;

&lt;p&gt;El código nos quedará del siguiente modo:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Changing CPU speed to 8Mhz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;noInterrupts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// deshabilitamos las interrupciones
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;CLKPR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLKPCE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// empezamos la secuencia de escritura
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;CLKPR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// seleccionamos el divisor desado, en nuestro caso el 1
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interrupts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// habilitamos las interrupciones
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Este código se ejecutará a 8Mhz
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Working!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;problemas&quot;&gt;Problemas&lt;/h2&gt;
&lt;p&gt;Puede suceder que tu puerto de serie no funcione inicialmente y no veamos en el monitor los &lt;em&gt;print&lt;/em&gt; que hemos puesto, sino un montón de caracteres, si esto te sucede puedes cambiar el baudrate a justo el anterior (la mitad), en nuestro ejemplo si tenemos 9600, pues 4800.&lt;/p&gt;

&lt;p&gt;Esto sucede porque la configuración de nuestro IDE dice que Arduino Uno ha de trabajar a 18Mhz, pero le estamos forzando a trabajar a menos velocidad, por lo que hay que hacer este apaño.&lt;/p&gt;

&lt;p&gt;También hay opción de cambiar la configuración de la placa y decirle que Arduino Uno trabaja a 8Mhz, para no tener que hacer estos trucos, para ello procedemos del siguiente modo.
Hay que localizar el fichero &lt;em&gt;boards.txt&lt;/em&gt;, lo más sencillo es hacer el el terminal un &lt;em&gt;find / -name boards.txt&lt;/em&gt; y suele estar en el path &lt;em&gt;hardware/arduino/avr/boards.txt&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Localizamos la configuración de nuestro Arduino y cambiamos el valor, en mi caso es Arduino Nano:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;nano&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f_cpu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16000000L&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;por el siguiente&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;n&quot;&gt;nano&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f_cpu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8000000L&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Reiniciamos nuestro IDE para que cargue la configuración, y ya lo tenemos.&lt;/p&gt;

&lt;h2 id=&quot;conclusiones&quot;&gt;Conclusiones&lt;/h2&gt;
&lt;p&gt;Hay que tener en cuenta que los dispositivos conectados a Arduino pueden ver afectada su comunicación al trabajar a estas frecuencias. Simplemente hay que verificar que son compatibles, aunque la mayoría suelen serlo. Lo mismo ocurre con el voltaje, ya que no vamos a trabajar a 5v.&lt;/p&gt;

&lt;p&gt;Sin embargo, esto no va a afectar al puerto de serie que tenemos conectado a nuestro ordenador (si es que programamos con el IDE) con el cual programamos, ya que seguirá funcionando perfectamente y podemos comunicarnos a baud rates normales como siempre.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Con este pequeño cambio podemos reducir el consumo de nuestra batería de forma considerable y nos da pie a usar baterías de 3.7v.&lt;/strong&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">Vamos a ver cómo modificar la frecuencia de reloj de la CPU de nuestro Arduino a través del software.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Arduno Nano funcionando a 3.7V y 16Mhz</title>
      <link href="https://eltallerdelhuerto.com/arduino-nano-ttl-3v" rel="alternate" type="text/html" title="Arduno Nano funcionando a 3.7V y 16Mhz" />
      <published>2020-04-27T12:00:00+02:00</published>
      <updated>2020-04-27T12:00:00+02:00</updated>
      <id>https://eltallerdelhuerto.com/arduino-nano-ttl-3v</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/arduino-nano-ttl-3v">&lt;p&gt;Cuando el rendimiento de las baterías es algo clave, podemos usar Arduino a 18Mhz con una batería de 3.7v y optimizar su uso.&lt;/p&gt;

&lt;p&gt;En este post vamos a poner como ejemplo un Arduino Nano que no es la versión oficial, por lo que el diseño puede ser diferente.&lt;/p&gt;

&lt;h2 id=&quot;problema&quot;&gt;Problema&lt;/h2&gt;
&lt;p&gt;Al trabajar con el módulo SIM800L para la comunicación GPRS hemos de tener en cuenta que el nivel lógico de este módulo es 3.3V. Por lo que la línea lógica de 5v de Arduino Nano no nos va a valer.&lt;/p&gt;

&lt;p&gt;El módulo SIM800 va a funcionar a 5v (siempre que haya una batería propia para SIM800L, que veremos en otro post), pero &lt;strong&gt;vamos a quemar nuestro módulo GSM al usar el canal RX o Reset a 5v provenientes de Arduino.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Además, si queremos usar una cómoda batería de litio 18650 o LiPo de 3.7V para alimentar Arduino, mantener un step-up para tener un voltaje constante de 5v es muy costoso, y vamos a tener que cargarla cada poco tiempo. Esto es debido a que el step-up va a pedir a la batería más en todo momento, aunque tengamos nuestro Arduino en modo sleep.&lt;/p&gt;

&lt;p&gt;No recomiendo nada su uso, por experiencia, ya que en cuestión de horas podemos agotar la batería dejando nuestro proyecto muerto.&lt;/p&gt;

&lt;p&gt;Y por experiencia también, he quemado un par de módulos al trabajar con 5v a nivel lógico, cuando en sus specs exponía que había que usarlos a 3.3V. Y esto ha sido por el USB, al cargar los sketch y alimentarlo posteriormente para las pruebas conectado y comunicándose. Recordemos que el USB envía 5v.&lt;/p&gt;

&lt;h2 id=&quot;solución&quot;&gt;Solución&lt;/h2&gt;
&lt;p&gt;Para evitar este problema, podemos hacer algo muy simple, &lt;strong&gt;eliminar el diodo que conecta la línea de 5v del USB a nuestro Arduino Nano&lt;/strong&gt;. De este modo, vamos a poder controlar qué voltaje le aplicamos, en mi caso 3.7v provenientes de una batería de litio 18650.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2020-04-27-arduino-nano-ttl-3v/arduino-before.jpeg&quot; alt=&quot;Arduino Nano antes con el diodo que conecta la linea de 5v del USB conectado&quot; title=&quot;Arduino Nano antes con el diodo que conecta la linea de 5v del USB conectado&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mira el círculo negro que hay en la imagen de arriba, ese es el diodo que vamos a remover.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2020-04-27-arduino-nano-ttl-3v/arduino-after.jpeg&quot; alt=&quot;Arduino Nano después con el diodo que conecta la linea de 5v del USB eliminado&quot; title=&quot;Arduino Nano después con el diodo que conecta la linea de 5v del USB eliminado&quot; /&gt;&lt;/p&gt;

&lt;p&gt;De nuevo, mira el círculo negro donde se ve como el diodo ha sido eliminado.&lt;/p&gt;

&lt;p&gt;Otra opción es añadir un divisor de voltaje entre nuestro Arduino y los módulos que usemos a 3.3V si queremos no quemarlos.
Pero en cualquier caso, vamos a tener el problema de que &lt;strong&gt;el módulo no funcionará a no ser que mantengamos la alimentación de Arduino Nano a 5v.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Es decir al aplicar un divisor de voltaje para llegar de 5 a 3v tenemos que la diferencia de 5v a 3.3v es 1.7v. Pero el resultado la diferencia de ese mismo divisor de voltaje aplicado a 3.7v son 2v. Y 2v no es detectado como nivel lógico alto (1) por algunos componentes, como es el caso del SIM800L por lo que no va a funcionar.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Por lo que añadiendo un divisor de voltaje al puerto de serie haremos que los módulos con lógica 3.3v dejen de funcionar cuando desconectemos el USB y lo alimentemos con una batería de 3.7v&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Por lo que si realizamos este cambio y eliminamos el diodo, tenemos que alimentar Arduino mientras lo tenemos conectado al USB para que funcione, ya que la línea de corriente de 5v estaría eliminada.&lt;/p&gt;

&lt;h2 id=&quot;un-poco-fuera-de-especificación&quot;&gt;Un poco fuera de especificación&lt;/h2&gt;

&lt;p&gt;Cuando digo que estamos fuera de la especificación me refiero a que el módulo Arduino Nano va a trabajar a 18Mhz con un voltaje de 3.3v cuando debería de ser un voltaje de 5v. Un voltaje de 3.3V permite una frecuencia máxima de reloj de 10Mhz, &lt;strong&gt;aunque en la práctica funciona con una batería de 3.7v&lt;/strong&gt;, ya nos encontraríamos al límite, pero dentro.&lt;/p&gt;

&lt;p&gt;Aunque normalmente para trabajar a esos voltajes se suele usar una frecuencia más baja, 8Mhz.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;La mejor solución para optimizar las baterías de 3.7v es comprar una placa de desarrollo Arduino que trabaje con el oscilador a 8Mhz.&lt;/strong&gt; De este modo, la línea de corriente de 5v del USB va a ser convertida a 3.3v y vamos a trabajar a unas frecuencias más bajas y más fiables. Esto es debido a que normalmente a 8Mhz el voltaje que se necesita es de 3.3v.&lt;/p&gt;

&lt;p&gt;Algunos Arduino de bajo coste que trabajan a 3.3v son los Arduino Pro Mini a 8Mhz y 3.3v.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">Cuando el rendimiento de las baterías es algo clave, podemos usar Arduino a 18Mhz con una batería de 3.7v y optimizar su uso.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Sensor de humedad capacitivo vs resistivo</title>
      <link href="https://eltallerdelhuerto.com/sensor-capacitivo-vs-resistivo" rel="alternate" type="text/html" title="Sensor de humedad capacitivo vs resistivo" />
      <published>2020-04-15T12:00:00+02:00</published>
      <updated>2020-04-15T12:00:00+02:00</updated>
      <id>https://eltallerdelhuerto.com/sensor-capacitivo-vs-resistivo</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/sensor-capacitivo-vs-resistivo">&lt;p&gt;Por qué un sensor de humedad capacitivo es generalmente mejor opción que uno resistivo para nuestros proyectos.&lt;/p&gt;

&lt;p&gt;Cuando comenzamos un proyecto en el que la medición de la humedad del suelo es un factor básico en la monitorización y el cuidado de nuestras plantas y cultivos, tenemos que elegir un sensor.&lt;/p&gt;

&lt;p&gt;Un sensor lo define la RAE como: “Dispositivo que detecta una determinada acción externa, temperatura, presión, etc., y la transmite adecuadamente.”. Aunque una definición más técnica podría ser la siguiente: &lt;strong&gt;se trata de un dispositivo que permite detectar cambios físicos o químicos, como por ejemplo la presión o la variación de una carga eléctrica.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;En este post vamos a ver la experiencia que tuve con los principales sensores (no profesionales) que hay en el mercado. Podemos diferenciar dos, los sensores &lt;strong&gt;resistivos&lt;/strong&gt; y los sensores &lt;strong&gt;capacitivos&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;qué-es-un-sensor-resistivo&quot;&gt;¿Qué es un sensor resistivo?&lt;/h2&gt;
&lt;p&gt;Un sensor resistivo se basa en el principio de la resistencia de los materiales. Entendemos por &lt;strong&gt;resistencia como la capacidad de un cuerpo o material para disminuir la corriente eléctrica que pasa a través de él.&lt;/strong&gt; Esta propiedad la encontramos en cualquier &lt;a href=&quot;arduino-para-el-cuidado-de-plantas&quot;&gt;circuito integrado&lt;/a&gt; y son un componente que marca el diseño de nuestros sistemas, y por lo tanto, de nuestra sociedad.&lt;/p&gt;

&lt;p&gt;Podemos medir la resistencia como &lt;code&gt;R=ρ*l/A&lt;/code&gt;. Donde &lt;strong&gt;ρ (rho)&lt;/strong&gt; es la resistividad, &lt;strong&gt;l&lt;/strong&gt; es la la longitud y &lt;strong&gt;A&lt;/strong&gt; el área transversal o grosor. 
Imaginemos un trozo de cobre de:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;0.20m (metros) de longitud.&lt;/li&gt;
  &lt;li&gt;3.14mm^2 (milímetros al cuadrado) área transversal.&lt;/li&gt;
  &lt;li&gt;0.0172 Ω (ohmios) es la resistividad del cobre.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La resistencia sería &lt;code&gt;R=0.0172*0.2/3.14&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Por lo que a mayor área, la resistencia de un material es menor, por ello en instalaciones de alto voltaje se usan cableados gruesos, para evitar que puedan salir ardiendo. Y a mayor longitud, mayor resistencia. Este último factor, la longitud, lo hemos de tener en cuenta en el diseño de nuestros circuitos porque puede producir problemas.&lt;/p&gt;

&lt;p&gt;Además, la temperatura es otro elemento que afecta a la resistencia. Por lo tanto, los factores que influyen el la resistencia de un material son:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Temperatura&lt;/li&gt;
  &lt;li&gt;Resistividad&lt;/li&gt;
  &lt;li&gt;Área&lt;/li&gt;
  &lt;li&gt;Longitud&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Un sensor resistivo es aquel entonces que mide el cambio de la resistencia de un material, en el caso del sensor de humedad de suelo, el material será el propio suelo.
Estos sensores se componen de dos sondas recubiertas de un metal conductor (electrodos) y miden la resistencia que ofrece el suelo, a mayor cantidad de agua, mayor cantidad de sales disueltas y menor resistencia.&lt;/p&gt;

&lt;p&gt;Y a menor cantidad de agua, justo lo contrario. Es importante tener en cuenta que el agua destilada o de lluvia no conduce la electricidad, por ello es por lo que hablamos de sales disueltas.&lt;/p&gt;

&lt;h2 id=&quot;qué-es-un-sensor-capacitivo&quot;&gt;¿Qué es un sensor capacitivo?&lt;/h2&gt;
&lt;p&gt;Este tipo de sensores trabajan básicamente midiendo la los cambios en una propiedad eléctrica llamada capacitancia.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2020-04-19-sensor-capacitivo-vs-resistivo/capacitive.jpg&quot; alt=&quot;Sensor de humedad capacitivo&quot; title=&quot;Sensor de humedad capacitivo para Arduino&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Y podemos definir la &lt;strong&gt;capacitancia como la reacción que se produce en dos materiales conductores separados entre sí a muy poca distancia, al aplicarles una carga eléctrica&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Imaginemos dos placas de metal separadas entre sí por un centímetro.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Cuando se les aplica un voltaje continuo, lo que sucede es que se crea un campo eléctrico que hace que los iones con carga positiva y con carga negativa se redistribuyan en ambas placas de forma ordenada, es decir, las cargas positivas en un lado y las negativas en otro.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cuando se les aplica un voltaje alterno, las cargas se mueven de una placa a otra generando una corriente eléctrica, por el propio movimiento de los iones con carga positiva y negativa. Esta corriente que se genera es la que mide el sensor.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;La capacitancia está influida por tres factores:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Área&lt;/li&gt;
  &lt;li&gt;Dieléctrico (es el material entre las placas conductoras)&lt;/li&gt;
  &lt;li&gt;Distancia.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;El dieléctrico por lo tanto, va a ser el suelo. Y además es lo único que va a cambiar de estado, el resto va a ser constante. De este modo se puede medir la humedad.&lt;/p&gt;

&lt;p&gt;La corriente eléctrica que se produce al aplicar un voltaje alterno, varía dependiendo de la capacitancia del dieléctrico, el suelo. Por lo tanto, los sensores capacitivos miden la intensidad de la corriente que se produce y que varía en función del dieléctrico: la humedad del suelo.&lt;/p&gt;

&lt;p&gt;Para protegerlo de las inclemencias del exterior, lluvia, humedad o polvo, podemos recubrir el circuito que expone con tubo termoretractil grueso, para así evitar que los componentes electrónicos expuestos se oxiden.&lt;/p&gt;

&lt;h2 id=&quot;otros-tipos-de-sensores-de-humedad-de-alto-rendimiento&quot;&gt;Otros tipos de sensores de humedad de alto rendimiento&lt;/h2&gt;
&lt;p&gt;Los sensores que he mostrado anteriormente no los podemos considerar profesionales, ni siquiera el capacitivo. Puesto que como veremos en el siguiente apartado presenta problemas, por lo que si queremos fiabilidad hemos de invertir más.&lt;/p&gt;

&lt;p&gt;Alguno que podemos encontrar es el SHT-10 también capacitivo u otro tipo de sensores que miden la presión succión como los Irrometer, pero en otro post veremos este punto más en detalle.&lt;/p&gt;

&lt;h2 id=&quot;ventajas-del-sensor-capacitivo-sobre-el-resistivo&quot;&gt;Ventajas del sensor capacitivo sobre el resistivo&lt;/h2&gt;
&lt;p&gt;El sensor resistivo más conocido que nos podemos encontrar es el FC-28, que ronda un precio de varios euros, &lt;a href=&quot;http://rover.ebay.com/rover/1/1185-53479-19255-0/1?ff3=4&amp;amp;pub=5575581389&amp;amp;toolid=10001&amp;amp;campid=5338673600&amp;amp;customid=&amp;amp;mpre=https%3A%2F%2Fwww.ebay.es%2Fitm%2FModulo-Sensor-Humedad-Tierra-Agua-Suelo-Higrometro-Soil-Arduino-S0021%2F201957194747%3Fhash%3Ditem2f05963bfb%3Ag%3AQPIAAOSw8gVX-kCv&quot; target=&quot;_blank&quot;&gt;este&lt;/a&gt; es el que yo compré. Para empezar nuestras andadas a un bajo coste es más que suficiente. Pero no nos va a servir para un proyecto en el campo, puesto que los componentes metálicos terminan oxidándose, modificando así la conductividad de los mismos y haciendo que las mediciones sean totalmente inexactas.&lt;/p&gt;

&lt;p&gt;Así es como quedó después de un año de uso &lt;img src=&quot;assets/images/2020-04-19-sensor-capacitivo-vs-resistivo/resistive.jpg&quot; alt=&quot;Sensor de humedad resistivo oxidado. Arduino&quot; title=&quot;Sensor de humedad resistivo oxidado. Arduino&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sin embargo, &lt;strong&gt;un sensor capacitivo no expone ningún material que pueda oxidarse con el contacto del suelo&lt;/strong&gt;, además tampoco va a hacer circular una carga eléctrica a través del suelo y de las raíces de nuestras plantas y cultivos. En otro post comentaré cómo las plantas se pueden ver afectadas por ello, aunque es insignificante.&lt;/p&gt;

&lt;p&gt;Otra de las ventajas del sensor capacitivo es que va a trabajar mejor en suelo, esto es debido a que al secarse la tierra, se puede contraer haciendo que los electrodos no estén totalmente en contacto con la tierra y produciendo mediciones inexactas.&lt;/p&gt;

&lt;p&gt;Aunque hay que decir que podemos encontrar sensores resistivos resistentes a la corrosión y fiables, como por ejemplo el SM150T.&lt;/p&gt;

&lt;h2 id=&quot;elementos-a-tener-en-cuenta&quot;&gt;Elementos a tener en cuenta&lt;/h2&gt;
&lt;p&gt;Tanto el sensor capacitivo como el resistivo van a necesitar estar bien fijados en el suelo. Al igual que ocurre con nuestras plantas al trasplantarlas, &lt;strong&gt;necesitamos que no quede ninguna bolsa de aire entre el sensor y el suelo&lt;/strong&gt;. Al menos, esta premisa es cierta para los sensores de bajo coste que podemos encontrar en el mercado. Si vamos hacia sensores profesionales, la cosa cambia.&lt;/p&gt;

&lt;p&gt;¿Por qué es necesario? Si dejáramos un espacio entre el sensor y el suelo, corremos el riesgo de &lt;strong&gt;medir la humedad como si estuviéramos en el aire&lt;/strong&gt;. Al menos es la experiencia que he tenido con los sensores baratos.&lt;/p&gt;

&lt;p&gt;En el caso del resistivo, la carga eléctrica no va a circular del mismo modo, por lo que la medición sería incorrecta.
En el caso del capacitivo, el dieléctrico no va a ser el suelo, sino el aire, por lo que, de nuevo, la medición va a ser incorrecta.&lt;/p&gt;

&lt;h2 id=&quot;conclusión&quot;&gt;Conclusión&lt;/h2&gt;
&lt;p&gt;Para proyectos que no sean industriales, si necesitas aprender y tienes poco presupuesto, te recomendaría un sensor resistivo. Pero &lt;strong&gt;si, por el contrario, quieres hacer algo que tenga que sobrevivir en el campo, te recomiendo un sensor capacitivo o bien invertir en un sensor industrial.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hemos visto que, tanto el sensor capacitivo, como el resistivo pueden perfectamente ser usados con alta fiabilidad, en proyectos de agricultura. Simplemente hay que encontrar el fabricante y producto que mejor se adapte, por lo que deducimos que el uso de una tecnología u otra no es, a priori, 100% determinante siempre y cuando los sensores sean de calidad y ofrezcan lo que buscamos.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">Por qué un sensor de humedad capacitivo es generalmente mejor opción que uno resistivo para nuestros proyectos.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Arduino para el cuidado de plantas</title>
      <link href="https://eltallerdelhuerto.com/arduino-para-el-cuidado-de-plantas" rel="alternate" type="text/html" title="Arduino para el cuidado de plantas" />
      <published>2020-03-26T11:00:00+01:00</published>
      <updated>2020-03-26T11:00:00+01:00</updated>
      <id>https://eltallerdelhuerto.com/arduino-para-el-cuidado-de-plantas</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/arduino-para-el-cuidado-de-plantas">&lt;p&gt;No solo se trata de un microcontrolador que permite automatizar los cuidados de las plantas, Arduino es mucho más que eso.&lt;/p&gt;

&lt;p&gt;Yo uso Arduino como la pieza principal a la hora de controlar la humedad, riego o temperatura de mis plantas, pero veamos qué es realmente un microcontrolador. &lt;strong&gt;Un microcontrolador se trata de un circuito integrado que básicamente ejecuta operaciones programadas en base a unas entradas y unas salidas de datos.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;no-tengo-ni-idea-de-qué-es-un-circuito-integrado&quot;&gt;No tengo ni idea de qué es un circuito integrado&lt;/h3&gt;
&lt;p&gt;Si ya has leído sobre este tema, puedes saltarte este apartado.&lt;/p&gt;

&lt;p&gt;En otro post hablaré detalladamente sobre esto, pero podemos imaginar un circuito como una red de carreteras contectadas entre sí de forma cerrada. Los vehículos son mensajeros que circulan en las carreteras y transportan &lt;strong&gt;datos&lt;/strong&gt; sobre, por ejemplo, la temperatura del ambiente o sobre si abrir o cerrar una válvula de riego.&lt;/p&gt;

&lt;p&gt;Podemos diferenciar entre datos de &lt;strong&gt;entrada&lt;/strong&gt; y datos de &lt;strong&gt;salida&lt;/strong&gt;, lo que comunmente en inglés podemos ver como I/O (Input - Output).&lt;/p&gt;

&lt;p&gt;Los datos de entrada se generan mediante sensores que capturan información del exterior, como por ejemplo la humedad o el viento. Estos datos se procesan en el microcontrolador y se producen unos datos de salida que van destinados a dispositivos que los interpretan.&lt;/p&gt;

&lt;p&gt;Algunos ejemplos de elementos que generan &lt;strong&gt;datos de entrada&lt;/strong&gt; son:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Sensores de humedad. Generan el mensaje % de humedad.&lt;/li&gt;
  &lt;li&gt;Sensores de luminosidad. Generan el mensaje % de luminosidad.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Y algunos ejemplos de elementos que leen los &lt;strong&gt;datos de salida&lt;/strong&gt; son:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Válvulas de riego. Leen el mensaje “abrir” o “cerrar”.&lt;/li&gt;
  &lt;li&gt;Motores rotativos. Leen el mensaje “arrancar” o “parar”.&lt;/li&gt;
  &lt;li&gt;Lámparas. Leen el mensaje “encender” o “apagar”.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por lo tanto, un microcontrolador es un pequeño circuito integrado que ejecuta tareas en base a datos. Es un mini cerebro, un &lt;strong&gt;procesador&lt;/strong&gt;. Y cómo, cuándo y dónde tiene que ejecutar las tareas se lo decimos nosotros, los programadores. Sí, tú vas a ser un programador, aunque seguro que ya lo eres.&lt;/p&gt;

&lt;p&gt;Mira, un ejemplo de tarea en tu calendario del móvil:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cuando sean las 8am de la mañana&lt;/li&gt;
  &lt;li&gt;Recordarme que tengo que coger la bolsa de deporte de la mesa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Otro ejemplo de &lt;strong&gt;tarea&lt;/strong&gt; aplicado al mundo de las plantas sería:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Si el sensor de humedad envía un mensaje diciendo que la humedad es 20% (dato de entrada).&lt;/li&gt;
  &lt;li&gt;Abre la válvula de riego durante 10 minutos (dato de salida).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Por lo tanto, las tareas las guardaremos en la &lt;strong&gt;memoria&lt;/strong&gt; de nuestro microcontrolador para que las ejecute cuando sea necesario. No voy a entrar en detalle de los tipos de memoria que tenemos disponibles con Arduino en este post, pero lo veremos más en detalle.&lt;/p&gt;

&lt;h2 id=&quot;mucho-más-que-un-simple-microcontrolador&quot;&gt;Mucho más que un simple microcontrolador&lt;/h2&gt;
&lt;p&gt;Cuando la gente pensamos o buscamos sobre Arduino vemos esto:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2020-04-06-arduino-para-el-cuidado-de-plantas/arduino-uno.jpg&quot; alt=&quot;Arduino Uno. Circuito integrado&quot; title=&quot;Arduino Uno. Circuito integrado&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pero Arduino es más que un simple circuito integrado. Lo que vemos en la imagen es la parte tangible, la parte visible de Arduino, la placa. Sin embargo, &lt;strong&gt;Arduino se trata del software, el hardware, el equipo de desarrollo, la comunidad de usuarios e incluso el espíritu y la filosofía de las personas de alrededor.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Otro de los motivos por los que Arduino es tan potente es porque &lt;strong&gt;el diseño del hardware de la placa&lt;/strong&gt;, lo que hemos visto en la imagen, &lt;strong&gt;es open source&lt;/strong&gt;. Esto hace que podamos encontrar placas a muy bajo coste de otros fabricantes, ya que cualquier empresa puede fabricarlo en base a este diseño. Por experiencia, no se comportan tan bien en proyectos con puesta en producción, pero con propósito didáctico o bien para trabajos caseros son más que suficiente.&lt;/p&gt;

&lt;p&gt;Por estos motivos decidirse por Arduino es todo un acierto, ya que vamos a tener infinidad de ayuda y documentación. Aun así, también veremos otras alternativas más adelante en el blog.&lt;/p&gt;

&lt;h2 id=&quot;a-que-no-sabías-esto&quot;&gt;¿A que no sabías esto?&lt;/h2&gt;
&lt;p&gt;Mira qué curioso: “arduino” es un nombre masculino e italiano que significa “amigo fuerte”. El nombre proviene del rey Arduin de Ivrea, que reinó hace miles de años.&lt;/p&gt;

&lt;h2 id=&quot;y-cómo-podemos-aplicar-arduino-al-mundo-de-las-plantas&quot;&gt;¿Y cómo podemos aplicar Arduino al mundo de las plantas?&lt;/h2&gt;
&lt;p&gt;Lo veremos poco a poco en el blog, pero la cantidad de aplicaciones es infinita, prácticamente como tantas ideas tengamos. No olvides que estamos hablando de un pequeño cerebro al que le podemos decir que ejecute tareas de forma programada.&lt;/p&gt;

&lt;p&gt;Por ejemplo, imagina que a tu Hortensia (una planta con grandes requerimientos hídricos) le falta agua. Puedes intentar mantenerla hidratada regándola diariamente, o puedes dejar que tu microcontrolador se encargue de la cantidad de agua que necesita, olvidándote de tener que hacerlo tú mismo. Gracias a él podrías establecer unos criterios de riego que permitiesen mantener con vida tu Hortensia incluso cuando no estuvieses en casa o hiciese mucho calor. ¿Son o no son ventajas a tener en cuenta para aprender a automatizar utilizando Arduino?&lt;/p&gt;

&lt;p&gt;Algunas otras tareas en las que podrías aplicar Arduino serían:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Medir la humedad&lt;/li&gt;
  &lt;li&gt;Medir la temperatura del suelo&lt;/li&gt;
  &lt;li&gt;Medir la temperatura del aire&lt;/li&gt;
  &lt;li&gt;Medir la intensidad viento&lt;/li&gt;
  &lt;li&gt;Permitir el bombeo de agua&lt;/li&gt;
  &lt;li&gt;Aplicar abono&lt;/li&gt;
  &lt;li&gt;¡Y más!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;vamos-con-un-ejemplo&quot;&gt;¡Vamos con un ejemplo!&lt;/h2&gt;
&lt;p&gt;Vamos a construir un pequeño circuito que será la base para poder entender de qué estamos hablando. Lo primero que tendrás que hacer es ir a &lt;a href=&quot;https://www.circuito.io/app&quot;&gt;Circuito.io&lt;/a&gt; es una app muy intuitiva y que nos permitirá aprender cómo quedaría nuestro diseño sin necesidad de gastar dinero en hardware y ver los resultados. La verdad que es que está muy bien.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Inicialmente aparecerá el Arduino Uno la mesa de trabajo&lt;/li&gt;
  &lt;li&gt;En el buscador, buscamos “soil” y arrastramos a la mesa de trabajo el “Soil moisture sensor”. Nuestro sensor de humedad.&lt;/li&gt;
  &lt;li&gt;Y a continuación buscamos “led” y arrastramos.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En este punto ya tenemos nuestro circuito montado. ¿A que ha sido fácil? Guarda esta referencia porque puede que te sea útil a partir de ahora.&lt;/p&gt;

&lt;h2 id=&quot;aunque-nunca-va-a-sustituir-tus-cuidados&quot;&gt;Aunque nunca va a sustituir tus cuidados&lt;/h2&gt;
&lt;p&gt;A las personas que nos gusta la naturaleza, nos apasiona ir al campo, tocar la tierra y regar nuestras bonitas plantas, podemos sentirnos un poco reticentes a la hora de incorporar la tecnología a estos momentos. Pero la tecnología no viene para quitarnos este trabajo, sino que nos ayuda en los momentos más críticos: unas vacaciones, unos meses muy ajetreados, olas de calor. La tecnología nos permite gestionar mejor el tiempo del cuidado de nuestras plantas y nuestros suelos.&lt;/p&gt;

&lt;p&gt;Si a ello le sumas las técnicas tradicionales, descubrirás que puedes conseguir una sensación muy gratificante y especial en el cuidados de tus plantas.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">No solo se trata de un microcontrolador que permite automatizar los cuidados de las plantas, Arduino es mucho más que eso.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Construir una lámpara vintage usando restos de poda</title>
      <link href="https://eltallerdelhuerto.com/diy-hacer-lampara-vintage" rel="alternate" type="text/html" title="Construir una lámpara vintage usando restos de poda" />
      <published>2020-03-26T11:00:00+01:00</published>
      <updated>2020-03-26T11:00:00+01:00</updated>
      <id>https://eltallerdelhuerto.com/diy-hacer-lampara-vintage</id>
      <content type="html" xml:base="https://eltallerdelhuerto.com/diy-hacer-lampara-vintage">&lt;p&gt;Vamos a ver cómo usar la poda de rejuvenecimiento de un Almendro para hacer un trabajo de bricolaje.&lt;/p&gt;

&lt;p&gt;El diseño vintage hace referencia a elementos antiguos que cobran un significado especial a día de hoy.&lt;/p&gt;

&lt;p&gt;En este caso, las bombillas que usaremos tienen ese característico diseño, ya que recuerdan a esas antiguas bombillas de filamentos que tanto se calentaban y que iluminaban la habitación con una luz cálida y diferente.&lt;/p&gt;

&lt;h2 id=&quot;materiales&quot;&gt;Materiales:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Un palo de madera&lt;/li&gt;
  &lt;li&gt;Dos portalámparas&lt;/li&gt;
  &lt;li&gt;Dos bombillas estilo vintage&lt;/li&gt;
  &lt;li&gt;Cable trenzado y recubierto de cuerda&lt;/li&gt;
  &lt;li&gt;Hilo negro&lt;/li&gt;
  &lt;li&gt;Destornillador&lt;/li&gt;
  &lt;li&gt;Tijeras&lt;/li&gt;
  &lt;li&gt;Papel de lija&lt;/li&gt;
  &lt;li&gt;Máquina de taladrar o segueta&lt;/li&gt;
  &lt;li&gt;(Opcional). Formón&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;assets/images/2020-03-26-diy-lampara-vintage/materials.jpg&quot; alt=&quot;Materiales para lampara vintage&quot; title=&quot;Materiales para lampara vintage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;El portalámparas negro lo reservaremos para realizar otro trabajo de bricolaje, otro tipo de lámpara donde el negro sea el protagonista.&lt;/p&gt;

&lt;p&gt;Este proyecto es muy bonito ya que te pone en contacto con la naturaleza. &lt;strong&gt;Puedes conseguir el palo en puntos de venta de leña&lt;/strong&gt;, pero te sugiero reserves un día soleado y des un paseo por una zona arbolada. Es muy probable que encuentres algún palo tirado en el suelo que te pueda servir.&lt;/p&gt;

&lt;h2 id=&quot;cómo-conseguí-el-palo&quot;&gt;Cómo conseguí el palo&lt;/h2&gt;
&lt;p&gt;El palo es de mi Almendro, de la &lt;a href=&quot;poda-rejuvenecimiento-almendro&quot;&gt;poda de rejuvenecimiento de hace tres años&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Aunque no tiene mucha dificultad, hay cosas que no tuve en cuenta en el diseño inicial, como que el agujero del portalámparas era un tanto pequeño o que no en todos los cables iba a circular corriente. Dejando uno de ellos a modo decorativo.&lt;/p&gt;

&lt;p&gt;Si tienes alguna duda, no dudes en dejarme un comentario y lo vemos.&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>El taller del huerto</name>
        
        
      </author>

      

      
        <category term="tecnologia" />
      

      
        <summary type="html">Vamos a ver cómo usar la poda de rejuvenecimiento de un Almendro para hacer un trabajo de bricolaje.</summary>
      

      
      
    </entry>
  
</feed>
